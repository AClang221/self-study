"""
[NOIP2012 提高组] 国王游戏
题目描述
恰逢 H 国国庆，国王邀请 $n$ 位大臣来玩一个有奖游戏。首先，他让每个大臣在左、
右手上面分别写下一个整数，国王自己也在左、右手上各写一个整数。然后，让这 $n$
位大臣排成一排，国王站在队伍的最前面。排好队后，所有的大臣都会获得国王奖赏的若干金币，
每位大臣获得的金币数分别是：排在该大臣前面的所有人的左手上的数的乘积除以他自己右手上的数，
然后向下取整得到的结果。国王不希望某一个大臣获得特别多的奖赏，所以他想请你帮他重
新安排一下队伍的顺序，使得获得奖赏最多的大臣，所获奖赏尽可能的少。注意，
国王的位置始终在队伍的最前面。

输入格式
第一行包含一个整数 $n$，表示大臣的人数。
第二行包含两个整数 $a$ 和 $b$，之间用一个空格隔开，分别表示国王左手和右手上的整数。
接下来 $n$ 行，每行包含两个整数 $a$ 和 $b$，之间用一个空格隔开，
分别表示每个大臣左手和右手上的整数。

输出格式
一个整数，表示重新排列后的队伍中获奖赏最多的大臣所获得的金币数。
## 样例 #1
### 样例输入 #1
```
3
1 1
2 3
7 4
4 6
```
### 样例输出 #1
```
2
```

## 提示
【输入输出样例说明】
按 $1$、$2$、$3$ 这样排列队伍，获得奖赏最多的大臣所获得金币数为 $2$；
按 $1$、$3$、$2$ 这样排列队伍，获得奖赏最多的大臣所获得金币数为 $2$；
按 $2$、$1$、$3$ 这样排列队伍，获得奖赏最多的大臣所获得金币数为 $2$；
按$ 2$、$3$、$1 $这样排列队伍，获得奖赏最多的大臣所获得金币数为 $9$；
按 $3$、$1$、$2 $这样排列队伍，获得奖赏最多的大臣所获得金币数为 $2$；
按$ 3$、$2$、$1$ 这样排列队伍，获得奖赏最多的大臣所获得金币数为 $9$。
因此，奖赏最多的大臣最少获得 $2$ 个金币，答案输出 $2$。
"""


# 思路
"""
这题的主要核心就是研究如何排序，
我们可以设，国王的左右手分别为 a ， b
第一个大臣为   a1 ， b1
第二个大臣为   a2 ， b2
排序方法有两种
先一后二，或者先二后一
那么我们可以得到两种结果
第一种（a/b1  ,   (a+a1)/b2）    第二种（a/b2    ,    (a+a2)/b1）
因为要求的结果为，最小的最大值，那么我们要在两种方法中，分别选出最大值进行比较
取较小的值作为结果
因为(a/b1)<((a+a2)/b1)     并且     (a/b2<(a+a1)/b2)
所以比较 (a+a1)/b2    与     (a+a2)/b1
假设
(a+a1)/b2 <=(a+a2)/b1
所以
(a+a1)*b1 <= (a+a2)*b2
所以可以看出a1*b1的结果越小，排在列表中的位置越靠前
"""
n = int(input())
king = list(map(int,input().split()))
person = [[x for x in map(int,input().split())]for i in range(n)]
product = 0
for i in range(n):
    product = person[i][0]*person[i][1]
    person[i].append(product)
person_so = sorted(person,key=lambda x:x[2],reverse=False)
total = king[0]
number = 0
money = 0
while number!=n:
    if total//person_so[number][1]>money:
        money=total//person_so[number][1]
    total = total * person_so[number][0]
    number+=1
print(money)